extends layout

block content
  link(rel="stylesheet" href="/stylesheets/home.css")
  
  .container(style="max-width: 1200px;")

    each device, index in devices
      .col-lg-4.col-md-6.col-sm-6.col-xs-12(style="padding: 10px;")

        .device-holder
          .div(id="device#{device.id}" style="overflow: hidden; margin-top: 4px; height: 220px;")
            .div(style="overflow: hidden; position: relative;")

              if device.type == 'AMP'
                .device-icon(style="background-image: url('/images/#{device.type}-icon-small.png');")
                  span.tooltip(style="top: 0px; left: 25px; width: 110px;") Power Monitor
                .device-title(id="title#{device.id}" onclick="window.location.assign('/device?id=#{device.id}');") #{device.name}

              else if device.type == 'TEMP'
                .device-icon(style="background-image: url('/images/#{device.type}-icon-small.png');")
                  span.tooltip(style="top: 0px; left: 25px; width: 120px;") Temperature Sensor
                .device-title(id="title#{device.id}" onclick="window.location.assign('/device?id=#{device.id}');") #{device.name}

              else if device.type == 'WTRLVL'
                .device-icon(style="background-image: url('/images/#{device.type}-icon-small.png');")
                  span.tooltip(style="top: 0px; left: 25px; width: 120px;") Water Level Sensor
                .device-title(id="title#{device.id}" onclick="window.location.assign('/device?id=#{device.id}');") #{device.name}

              - var timeoutMinutes = 5;
              - var currentDate = new Date();
              - currentDate.setMinutes(currentDate.getMinutes() - timeoutMinutes);
              - currentDate.setHours(currentDate.getHours() + 4);
              if device.lastreading >= currentDate
                .device-signal(style="background-image: url('/images/signal-green.png');")
                  span.tooltip(style="top: 0px; right: 25px; width: 80px;") Connected
              else
                .device-signal
                  span.tooltip(style="top: 0px; right: 25px; width: 90px;") Disconnected

              .device-settings(onclick="deviceSettings(#{device.id}, '#{device.type}')")

            .device-content(id="content#{device.id}" onclick="window.location.assign('/device?id=#{device.id}');")
              .graph(id="chart#{device.id}")


          .div(id="settings#{device.id}" style="overflow: hidden; height: 0px;")

            .div(style="overflow: hidden; position: relative;")
              .device-title Wigit Settings
              .device-close(onclick="deviceMain(#{device.id}, '#{device.type}')")
                .glyphicon.glyphicon-menu-down

            .div(style="margin-top: 5px; height: 195px; overflow: auto;")

              .col-xs-5(style="text-align: right; padding: 10px; margin-top: 10px;")
                .settings-input-label Max Value: 
                input.settings-input(type="text" value="10") 
                br
                .settings-input-label Min Value: 
                input.settings-input(type="text" value="0") 

              .col-xs-7(style="text-align: right; padding: 10px; margin-top: 10px;")
                .settings-input-label Timescale: 
                select.settings-select(type="text") 
                  option Hour
                  option Day

                if device.type == 'AMP'
                  br
                  .settings-input-label Channel: 
                  select.settings-select(type="text") 
                    option Channel 1
                    option Channel 2
                    option Channel 3
                    option Channel 4
                    option Channel 5
                    option Channel 6
                    option Channel 7
                    option Channel 8

              


  script(type="text/javascript" src="https://www.gstatic.com/charts/loader.js").
  script.

    function deviceSettings(deviceID, deviceType){
      //$('#device' + deviceID).css('height', '0px');
      //$('#settings' + deviceID).css('height', 'auto');

      $('#device' + deviceID).animate({height: "0px"}, 200);
      $('#settings' + deviceID).animate({height: "220px"}, 200);
    }

    function deviceMain(deviceID, deviceType){
      //$('#device' + deviceID).css('height', 'auto');
      //$('#settings' + deviceID).css('height', '0px');

      $('#device' + deviceID).animate({height: "220px"}, 200);
      $('#settings' + deviceID).animate({height: "0px"}, 200);
    }

    $(".device-content, .device-title").hover(function(){
      var contentID = $(this).attr('id');
      contentID = contentID.replace('content', '');
      contentID = contentID.replace('title', '');
      $("#title"+contentID).css('color', '#0af');

    }, function(){
      var contentID = $(this).attr('id');
      contentID = contentID.replace('content', '');
      contentID = contentID.replace('title', '');
      $("#title"+contentID).css('color', '#000');
    });

    var devices = [];

    function drawHourChart(device, data) {

      var data = google.visualization.arrayToDataTable(data);
      var chart;

      var startDate = new Date();
      startDate.setMinutes(0);
      startDate.setSeconds(-1);

      var endDate = new Date();
      endDate.setMinutes(60);
      endDate.setSeconds(0);

      // Set Options
      var options;
      if(device.type == "AMP") {
        var channelColor = '#000';
        options = {
          legend: 'none',
          colors: [channelColor],
          chartArea: {left: 35, top: 10, 'width': '82%', 'height': '84%'},
          hAxis: { 
            gridlines: { count: 5, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 6, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 10
            },
            format: '#kW' 
          }
        };
        chart = new google.visualization.AreaChart(document.getElementById('chart' + device.id));

      } else if(device.type == "TEMP") {
        options = {
          legend: 'none',
          colors: ['#0af'],
          chartArea: {left: 35, top: 10, 'width': '82%', 'height': '84%'},
          hAxis: { 
            gridlines: { count: 5, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 6, color:"#ccc" },
            viewWindow: {
                    min: -10,
                    max: 40
            },
            format: '#Â°C' 
          }
        };
        chart = new google.visualization.LineChart(document.getElementById('chart' + device.id));
      }

      chart.draw(data, options);
    }


  script.

    // ====Get Data====

    // Gets data based on whats selected and redraws the chart
    function getData(chart, deviceMac, deviceType, startDate, timeScale, timezoneOffset, time, ampm) {

      // Build url to get new data from server
      var url = "/device/getdata?devicemac=" + deviceMac + "&devicetype=" + deviceType + "&startdate=" + startDate + "&timescale=" + timeScale + "&timezoneoffset=" + timezoneOffset;
      if(timescale == 'hour' || timescale == 'halfday') { url += "&time=" + time + "&ampm=" + ampm; }

      // Get new data
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
        if(this.readyState == 4 && this.status == 200) {

          // Format data
          var data = JSON.parse(this.responseText)
          for(var i = 1; i < data.length; i++) {
            data[i][0] = new Date(data[i][0]);
            for(var j = 1; j < data[i].length; j++) {
              data[i][j] = Number(data[i][j]);
              if(data[i][j] < 0) data[i][j] = null;
            }
          }

          // Redraw Chart
          if(timeScale == 'hour') {
            var time = Number($('#timepicker').val());
            var ampm = $('#ampmpicker').val();

            if(time == 12 && ampm == 'AM') time = 0;
            if(time != 12 && ampm == 'PM') time += 12;
            
            var tempDate = new Date(startdate);
            tempDate.setHours(time);
            tempDate.setMinutes(0);
            tempDate.setSeconds(0);
            chart = new google.visualization.AreaChart(document.getElementById('chart'));
            //drawHourChart(data, tempDate);

          }

        }
      };
      xhttp.open("GET", url, true);
      xhttp.send();
    }


  each device, index in devices

    script.

      // ====Get data for each device====

      var deviceMac = '#{device.mac}';
      var deviceType = '#{device.type}';
      var startDate = new Date();
      var timeScale = 'hour';
      var timezoneOffset = new Date().getTimezoneOffset();

      console.log("deviceMac " + deviceMac);
      console.log("deviceType " + deviceType);
      console.log("startDate " + startDate);
      console.log("timeScale " + timeScale);
      console.log("timezoneOffset " + timezoneOffset);

      //var time = new Date().getTimezoneOffset();
      //var ampm = new Date().getTimezoneOffset();
      //getData(chart, deviceMac, deviceType, startDate, timeScale, timezoneOffset, time, ampm);
      











