extends layout

block content
  link(rel="stylesheet" href="/stylesheets/home.css")
  
  .container(style="max-width: 1200px;")

    each device, index in devices
      .col-lg-4.col-md-6.col-sm-6.col-xs-12(style="padding: 10px;")

        .device-holder(onclick="window.location.assign('/device?id=#{device.id}');")
          .div(style="overflow: hidden; position: relative; margin-top: 4px;")

            if device.type == 'AMP'
              .device-icon(style="background-image: url('/images/#{device.type}-icon-small.png');")
                span.tooltip(style="top: 0px; left: 20px; width: 120px;") Power Monitor
              .device-title #{device.name}

            else if device.type == 'TEMP'
              .device-icon(style="background-image: url('/images/#{device.type}-icon-small.png');")
                span.tooltip(style="top: 0px; left: 20px; width: 120px;") Temperature Sensor
              .device-title #{device.name}

            else if device.type == 'WTRLVL'
              .device-icon(style="background-image: url('/images/#{device.type}-icon-small.png');")
                span.tooltip(style="top: 0px; left: 20px; width: 120px;") Water Level Sensor
              .device-title #{device.name}

            - var timeoutMinutes = 5;
            - var currentDate = new Date();
            - currentDate.setMinutes(currentDate.getMinutes() - timeoutMinutes);
            - currentDate.setHours(currentDate.getHours() + 4);
            if device.lastreading >= currentDate
              .device-signal(style="background-image: url('/images/signal-green.png');")
                span.tooltip(style="top: 0px; right: 20px; width: 80px;") Connected
            else
              .device-signal
                span.tooltip(style="top: 0px; right: 20px; width: 90px;") Disconnected

          .device-content
              .graph(id="chart#{device.id}")


  script(type="text/javascript" src="https://www.gstatic.com/charts/loader.js").
  script.

    var devices = [];

    function drawHourChart(device, data) {

      var startDate = new Date();
      startDate.setMinutes(0);
      startDate.setSeconds(-1);

      var endDate = new Date();
      endDate.setMinutes(60);
      endDate.setSeconds(0);

      // Set Options
      var options;
      if(device.type == "AMP") {
        options = {
          legend: 'none',
          colors: ['#000'],
          chartArea: {left: 35, top: 10, 'width': '84%', 'height': '84%'},
          hAxis: { 
            gridlines: { count: 5, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 6, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 10
            },
            format: '#kW' 
          }
        };

      } else if(device.type == "TEMP") {
        options = {
          legend: 'none',
          colors: ['#000'],
          chartArea: {left: 35, top: 10, 'width': '84%', 'height': '84%'},
          hAxis: { 
            gridlines: { count: 5, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 6, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 10
            },
            format: '#Â°C' 
          }
        };

      } else if(device.type == "WTRLVL") {
        options = {
          legend: 'none',
          colors: ['#000'],
          chartArea: {left: 35, top: 10, 'width': '84%', 'height': '84%'},
          hAxis: { 
            gridlines: { count: 5, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 6, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 10
            },
            format: '#m' 
          }
        };
      }

      var data = google.visualization.arrayToDataTable(data);
      var chart = new google.visualization.AreaChart(document.getElementById('chart' + device.id));
      chart.draw(data, options);
    }

  each device, index in devices
    script.
      var dataTogether = '#{device.data}'.split(',');
      var dataTemp = [];
      for(var i = 0; i < #{device.data.length}; i+=1){
        console.log(dataTogether[i]);
        console.log(dataTogether[i+1]);
      }
      devices.push({id: #{device.id}, type: '#{device.type}', data: dataTemp });

  script.

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawCharts);

    function drawCharts(){
      var data = [];
      var testDate = new Date();
      testDate.setSeconds(0);
      var testDate2 = new Date(testDate);

      data.push(['Time', 'Value']);
      testDate.setMinutes(10);
      testDate2 = new Date(testDate);
      data.push([testDate2, 1]);
      testDate.setMinutes(20);
      testDate2 = new Date(testDate);
      data.push([testDate2, 2]);
      testDate.setMinutes(30);
      testDate2 = new Date(testDate);
      data.push([testDate2, 3]);
      testDate.setMinutes(40);
      testDate2 = new Date(testDate);
      data.push([testDate2, 4]);
      testDate.setMinutes(50);
      testDate2 = new Date(testDate);
      data.push([testDate2, 5]);

      for(var i = 0; i < devices.length; i++) {
        drawHourChart(devices[i], data);
      }

    }
      











