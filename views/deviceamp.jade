extends device

block devicetitle
  .device-icon(style="background-image: url('/images/AMP-icon.png');")
  .device-name(style="margin-left: 5px;") #{device.name}
  .device-reading 
    .div #{device.lastreadingdata.split(':')[0]} A - #{(Number(device.lastreadingdata.split(':')[0]) * 230).toFixed(2)} W
    .div(style="font-size: 11px;") #{device.lastreading}
    .div.kWh 
    

block scriptdata
  script(type="text/javascript").
    var data = JSON.parse('#{JSON.stringify(data)}'.replace(/&quot;/g, '"'));

    if(getParameterByName('timescale') == 'day') {
      var readings =  [['Time', 'Watt Hours']];
      var kWh = 0;
      var startdate = new Date(data[i].receivedtime);

      for(var i = 0; i < data.length; i++) {
        var date = new Date(data[i].receivedtime);
        readings.push([date, Number(data[i].data)]);
        kWh = kWh + Number(data[i].data);
      }

      $('.kWh').html((kWh/1000).toFixed(2) + " kWh");

      var options = {
          legend: 'none',
          colors: ['#00aaff'],
          chartArea: {left: 70, top: 15, 'width': '90%', 'height': '88%'},
          hAxis: { 
            format: format,
            gridlines: { count: hAxisCount, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 5, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 5000
            },
            format: '# kW' 
          }
      };

      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {
        var data = google.visualization.arrayToDataTable(readings);
        var chart = new google.visualization.ColumnChart(document.getElementById('chart'));
        chart.draw(data, options);
      }

    } else if(getParameterByName('timescale') == 'hour') {
      var readings =  [['Time', 'Watts']];
      var kWh = 0;

      for(var i = 0; i < data.length; i++) {
        var date = new Date(data[i].receivedtime);
        readings.push([date, Number(data[i].data)]);
        kWh = (kWh + Number(data[i].data)) / 2;
      }

      $('.kWh').html((kWh/1000).toFixed(2) + " kWh");

      var options = {
          legend: 'none',
          colors: ['#00aaff'],
          chartArea: {left: 70, top: 15, 'width': '90%', 'height': '88%'},
          hAxis: { 
            format: format,
            gridlines: { count: hAxisCount, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 5, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 5000
            },
            format: '# kW' 
          }
      };

      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {
        var data = google.visualization.arrayToDataTable(readings);
        var chart = new google.visualization.LineChart(document.getElementById('chart'));
        chart.draw(data, options);
      }

    } else {
      var readings =  [['Time', 'Watts Hours']];
      var kWh = 0;

      for(var i = 0; i < data.length; i++) {
        var date = new Date(data[i].receivedtime);
        readings.push([date, Number(data[i].data)]);
        kWh += Number(data[i].data);
      }

      $('.kWh').html((kWh/1000).toFixed(2) + " kWh");

      var options = {
          legend: 'none',
          colors: ['#00aaff'],
          chartArea: {left: 70, top: 15, 'width': '90%', 'height': '88%'},
          hAxis: { 
            format: format,
            gridlines: { count: hAxisCount, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 5, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 20000
            },
            format: '# kWh' 
          }
      };

      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {
        var data = google.visualization.arrayToDataTable(readings);
        var chart = new google.visualization.ColumnChart(document.getElementById('chart'));
        chart.draw(data, options);
      }

    }

