extends device

block devicetitle
  .div(style="overflow: auto;")
    .device-icon(style="background-image: url('/images/AMP-icon.png');")
    .device-name(style="margin-left: 5px;") #{device.name}
    .device-reading 
      .div #{device.lastreadingdata.split(':')[0]} A - #{(Number(device.lastreadingdata.split(':')[0]) * 230).toFixed(2)} W
      .div(style="font-size: 11px;") #{device.lastreading}
      .div.kWh 0 kWh

block devicecontent

  .graph-button-holder(style="overflow: auto; margin-top: 20px;")

    .col-md-3
      if channels.indexOf('1') != -1
        .main-button-alt(style="max-width: 200px; width: 96%; background: #000;" onclick="alterChannel(1)") 1: #{device.labels.split(',')[0]}
      else
        .main-button-alt(style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(1)") 1: #{device.labels.split(',')[0]}

    .col-md-3
      if channels.indexOf('2') != -1
        .main-button-alt(style="max-width: 200px; width: 96%; background: #f00;" onclick="alterChannel(2)") 2: #{device.labels.split(',')[1]}
      else
        .main-button-alt(style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(2)") 2: #{device.labels.split(',')[1]}

    .col-md-3
      if channels.indexOf('3') != -1
        .main-button-alt(style="max-width: 200px; width: 96%; background: #0f0;" onclick="alterChannel(3)") 3: #{device.labels.split(',')[2]}
      else
        .main-button-alt(style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(3)") 3: #{device.labels.split(',')[2]}

    .col-md-3
      if channels.indexOf('4') != -1
        .main-button-alt(style="max-width: 200px; width: 96%; background: #00f;" onclick="alterChannel(4)") 4: #{device.labels.split(',')[3]}
      else
        .main-button-alt(style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(4)") 4: #{device.labels.split(',')[3]}

  .graph-button-holder(style="overflow: auto; margin-bottom: 10px;")

    .col-md-3
      if channels.indexOf('5') != -1
        .main-button-alt(style="max-width: 200px; width: 96%; background: #ff0;" onclick="alterChannel(5)") 5: #{device.labels.split(',')[4]}
      else
        .main-button-alt(style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(5)") 5: #{device.labels.split(',')[4]}

    .col-md-3
      if channels.indexOf('6') != -1
        .main-button-alt(style="max-width: 200px; width: 96%; background: #0ff;" onclick="alterChannel(6)") 6: #{device.labels.split(',')[5]}
      else
        .main-button-alt(style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(6)") 6: #{device.labels.split(',')[5]}

    .col-md-3
      if channels.indexOf('7') != -1
        .main-button-alt(style="max-width: 200px; width: 96%; background: #f0f;" onclick="alterChannel(7)") 7: #{device.labels.split(',')[6]}
      else
        .main-button-alt(style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(7)") 7: #{device.labels.split(',')[6]}

    .col-md-3
      if channels.indexOf('8') != -1
        .main-button-alt(style="max-width: 200px; width: 96%; background: #000;" onclick="alterChannel(8)") 8: #{device.labels.split(',')[7]}
      else
        .main-button-alt(style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(8)") 8: #{device.labels.split(',')[7]}


  .graph-button-holder(style="text-align: center; overflow: auto; margin-bottom: 30px;")
    .col-md-3
    .col-md-3
      .main-button-alt(style="max-width: 200px; width: 96%; text-align: center; margin-right: 5px; " onclick="alterChannel('1,2,3,4,5,6,7,8')") Select All
    .col-md-3
      .main-button-alt(style="max-width: 200px; width: 96%; text-align: center; margin-right: 5px; " onclick="alterChannel('none')") Clear Selected
    .col-md-3
    

block scriptdata
  script(type="text/javascript").
    if(getParameterByName('channel')) $("#channel").val(getParameterByName('channel'));

    function alterChannel(channel) {
        $('.loader').css('display', 'block');
        var url = '/device?id=' + getParameterByName('id');
        url += '&startDate=' + $('#datepicker').val().split('-')[2] + '-' + $('#datepicker').val().split('-')[1] + '-' + $('#datepicker').val().split('-')[0];
        if($('#timepicker').val()) url += '&time=' + $('#timepicker').val();
        if($('#ampmpicker').val()) url += '&ampm=' + $('#ampmpicker').val();
        if(getParameterByName('timescale')) url += '&timescale=' + getParameterByName('timescale');

        if(channel == 'none') url += '&channels=' + channel;
        else {
          var channels = '#{channels}'.split(',');
          if(channels.indexOf(channel + '') != -1) { if(channels.length == 1) url += '&channels=none'; else { channels.splice(channels.indexOf(channel + '') , 1); url += '&channels=' + channels; } }
          else { if(channels[0] == 'none') channels[0] = channel + ''; else channels.push(channel + ''); url += '&channels=' + channels; }
          
        }

        window.location.assign(url);
    }

    function changeChannel(channel) {
        $('.loader').css('display', 'block');
        var url = '/device?id=' + getParameterByName('id');
        url += '&startDate=' + $('#datepicker').val().split('-')[2] + '-' + $('#datepicker').val().split('-')[1] + '-' + $('#datepicker').val().split('-')[0];
        if($('#timepicker').val()) url += '&time=' + $('#timepicker').val();
        if($('#ampmpicker').val()) url += '&ampm=' + $('#ampmpicker').val();
        if(getParameterByName('timescale')) url += '&timescale=' + getParameterByName('timescale');
        url += '&channel=' + channel;

        window.location.assign(url);
    }

    var data = JSON.parse('#{JSON.stringify(data)}'.replace(/&quot;/g, '"'));


    if('#{timescale}' == 'day') {
      var columns = ['Time'];
      for(var i = 0 ; i < #{channels.split(',').length}; i++) columns.push('Watt Hours');
      var readings =  [columns];
      var colors =  [];
      var kWh = 0;

      for(var i = 0; i < data.length; i++) {
        data[i].reading[0] = new Date(data[i].reading[0]);
        readings.push(data[i].reading);
        for(var j = 0 ; j < #{channels.split(',').length}; j++) kWh += data[i].reading[j+1];
      }

      $('.kWh').html((kWh/1000).toFixed(2) + ' kWh');

      if('#{channels}'.indexOf('1') != -1) colors.push('#000');
      if('#{channels}'.indexOf('2') != -1)  colors.push('#f00');
      if('#{channels}'.indexOf('3') != -1)  colors.push('#0f0');
      if('#{channels}'.indexOf('4') != -1) colors.push('#00f');
      if('#{channels}'.indexOf('5') != -1)  colors.push('#ff0');
      if('#{channels}'.indexOf('6') != -1)  colors.push('#0ff');
      if('#{channels}'.indexOf('7') != -1)  colors.push('#f0f');
      if('#{channels}'.indexOf('8') != -1)  colors.push('#000');

      var options = {
          legend: 'none',
          colors: colors,
          chartArea: {left: 70, top: 15, 'width': '86%', 'height': '88%'},
          hAxis: { 
            format: format,
            gridlines: { count: hAxisCount, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 11, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 10000
            },
            format: '# Wh' 
          }
      };

      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChartDay);

      function drawChartDay() {
        var data = google.visualization.arrayToDataTable(readings);
        var chart = new google.visualization.ColumnChart(document.getElementById('chart'));

        function selectHandler() {
          var selectedItem = chart.getSelection()[0];
          if (selectedItem) {
            var value = data.getValue(selectedItem.row, 0);
            value = value.getHours();
            var ampm = "AM";
            if(value > 11) ampm = "PM";
            if(value > 12) value -= 12;
            if(value == 0) value = 12;

            var url = '/device?id=' + getParameterByName('id');
            url += '&timescale=hour';
            url += '&startDate=' + $('#datepicker').val().split('-')[2] + '-' + $('#datepicker').val().split('-')[1] + '-' + $('#datepicker').val().split('-')[0];
            url += '&time=' + value;
            url += '&ampm=' + ampm;
            if(getParameterByName('channels')) url += '&channels=' + getParameterByName('channel');
            window.location.assign(url);
          }
        }
        google.visualization.events.addListener(chart, 'select', selectHandler);

        chart.draw(data, options);
        $('.loader').css('display', 'none');
      }

    } else if(getParameterByName('timescale') == 'hour') {
      var columns = ['Time'];
      for(var i = 0 ; i < #{channels.split(',').length}; i++) columns.push('Watts');
      var readings =  [columns];
      var colors =  [];
      var kWh = 0;

      for(var i = 0; i < data.length; i++) {
        data[i].reading[0] = new Date(data[i].reading[0]);
        readings.push(data[i].reading);
        for(var j = 0 ; j < #{channels.split(',').length}; j++) kWh += data[i].reading[j+1];
      }

      $('.kWh').html((kWh/1000).toFixed(2) + ' kWh');

      if('#{channels}'.indexOf('1') != -1) colors.push('#000');
      if('#{channels}'.indexOf('2') != -1)  colors.push('#f00');
      if('#{channels}'.indexOf('3') != -1)  colors.push('#0f0');
      if('#{channels}'.indexOf('4') != -1) colors.push('#00f');
      if('#{channels}'.indexOf('5') != -1)  colors.push('#ff0');
      if('#{channels}'.indexOf('6') != -1)  colors.push('#0ff');
      if('#{channels}'.indexOf('7') != -1)  colors.push('#f0f');
      if('#{channels}'.indexOf('8') != -1)  colors.push('#000');

      var options = {
          legend: 'none',
          colors: colors,
          chartArea: {left: 70, top: 15, 'width': '86%', 'height': '88%'},
          hAxis: { 
            format: format,
            gridlines: { count: hAxisCount, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 11, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 10000
            },
            format: '# W' 
          }
      };

      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChartHour);

      function drawChartHour() {
        var data = google.visualization.arrayToDataTable(readings);
        var chart = new google.visualization.AreaChart(document.getElementById('chart'));
        chart.draw(data, options);
        $('.loader').css('display', 'none');
      }

    } else {
      var readings =  [['Time', 'Watt Hours']];
      var kWh = 0;

      for(var i = 0; i < data.length; i++) {
        var date = new Date(data[i].receivedtime);
        readings.push([date, Number(data[i].data)]);
        kWh += Number(data[i].data);
      }

      $('.kWh').html((kWh/1000).toFixed(2) + " kWh");

      var options = {
          legend: 'none',
          colors: ['#00aaff'],
          chartArea: {left: 70, top: 15, 'width': '86%', 'height': '88%'},
          hAxis: { 
            format: format,
            gridlines: { count: hAxisCount, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 5, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 20000
            },
            format: '# Wh' 
          }
      };

      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChartOther);

      function drawChartOther() {
        var data = google.visualization.arrayToDataTable(readings);
        var chart = new google.visualization.ColumnChart(document.getElementById('chart'));
        chart.draw(data, options);
        $('.loader').css('display', 'none');
      }

    }


    // RENAME DEVICE

    function renameChannelDialog(id, mac) {
      var currentName = $("#channel").val().trim();
      $(".overlay-inner-title").html('Edit Channel '+currentName.split(': ')[0]);
      $(".overlay-inner-subtitle").html('');
      var html = "";
      html += '<span style="font-weight: 600;">Rename Channel</span>';
      html += '<br>';
      html += '<span>What you want to call this channel:</span>';
      html += '<br>';
      html += '<input id="channelName" value="'+currentName.split(': ')[1]+'" class="new-device-input" onClick="this.select();" />';
      html += '<br>';
      html += '<div class="overlay-button" style="margin-right: 10px;" onclick="checkServerChannel('+id+', '+currentName.split(': ')[0]+')">Rename</div>';
      html += '<br>';
      $('.overlay-inner-container').html('');
      $('.overlay-inner-container').append(html);
      $(".overlay").fadeIn();
    }

    function checkServerChannel(id, channel){
      var newName = $("#channelName").val().trim();
      if(newName=="") { toast("Channel name can not be empty", 1200); return; }

      // Check device info on server
      console.log('TODO: Check device info on server');

      // Edit on server
      var url = "/devices/editdevicechannel?id=" + id + "&name=" + newName + "&channel=" + channel + "&labels=" + '#{device.labels}';
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {

            // Close dialog and edit device
            if(this.responseText == "Success") {
              toast('Channel name changed', 2400);
              $(".overlay").fadeOut();
              editChannelOnPage(id, newName, channel);

            } else {
              console.log(this.responseText);
            }

          }
      };
      xhttp.open("POST", url, true);
      xhttp.send();
    }

    function editChannelOnPage(id, newName, channel) {
      $('#channel'+ channel).html(channel + ': ' + newName);
      $('#channel'+ channel).val(channel + ': ' + newName);
    }

    function cancel(){
      $(".overlay").fadeOut();
    }

