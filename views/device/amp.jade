extends device

block devicetitle
  .div(style="overflow: auto;")
    .device-icon(style="background-image: url('/images/AMP-icon.png');")
    .device-name-container 
      .device-name #{device.name}
      .device-type Power Useage Monitor
    .device-reading 
      .div #{device.lastreadingdata.split(':')[0]} A - #{(Number(device.lastreadingdata.split(':')[0]) * 230).toFixed(2)} W
      .div(style="font-size: 11px;") #{device.lastreading}

block devicecontent

  .graph-button-holder(style="overflow: auto; margin-top: 20px;")

    .col-md-3
        .main-button-alt(id="channel1" style="max-width: 200px; width: 96%; background: #000;" onclick="alterChannel(1)") 1: #{device.labels.split(',')[0]}

    .col-md-3
        .main-button-alt(id="channel2" style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(2)") 2: #{device.labels.split(',')[1]}

    .col-md-3
        .main-button-alt(id="channel3" style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(3)") 3: #{device.labels.split(',')[2]}

    .col-md-3
        .main-button-alt(id="channel4" style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(4)") 4: #{device.labels.split(',')[3]}

  .graph-button-holder(style="overflow: auto; margin-bottom: 10px;")

    .col-md-3
        .main-button-alt(id="channel5" style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(5)") 5: #{device.labels.split(',')[4]}

    .col-md-3
        .main-button-alt(id="channel6" style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(6)") 6: #{device.labels.split(',')[5]}

    .col-md-3
        .main-button-alt(id="channel7" style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(7)") 7: #{device.labels.split(',')[6]}

    .col-md-3
        .main-button-alt(id="channel8" style="max-width: 200px; width: 96%; background: #bbb;" onclick="alterChannel(8)") 8: #{device.labels.split(',')[7]}


  .graph-button-holder(style="text-align: center; overflow: auto; margin-bottom: 10px;")
    .col-md-3
    .col-md-3
      .main-button-alt(style="max-width: 200px; width: 96%; text-align: center; margin-right: 5px; " onclick="alterChannel('1,2,3,4,5,6,7,8')") Select All
    .col-md-3
      .main-button-alt(style="max-width: 200px; width: 96%; text-align: center; margin-right: 5px; " onclick="alterChannel('none')") Clear Selected
    .col-md-3
    .col-md-12
      .div.kWh 0 kWh
    

block scriptdata
  script(type="text/javascript").

    function alterChannel(channel) {
      // Change button color (select / deselect)
      if($('#channel' + channel).css('background-color') == 'rgb(187, 187, 187)') {
        if(channel == 1) $('#channel' + channel).css('background-color', '#000000');
        if(channel == 2) $('#channel' + channel).css('background-color', '#ff0000');
        if(channel == 3) $('#channel' + channel).css('background-color', '#00C400');
        if(channel == 4) $('#channel' + channel).css('background-color', '#0000ff');
        if(channel == 5) $('#channel' + channel).css('background-color', '#F2A100');
        if(channel == 6) $('#channel' + channel).css('background-color', '#00aaff');
        if(channel == 7) $('#channel' + channel).css('background-color', '#ED00C5');
        if(channel == 8) $('#channel' + channel).css('background-color', '#9B00EF');
      } else $('#channel' + channel).css('background-color', 'rgb(187, 187, 187)');

      // Get Data
      getData();
    }

    function changeTimeScale(timescale) {
      // Change timescale
      $('#hourScale').css('background-color', '#00AAFF'); $('#hourScale').css('cursor', 'pointer'); $('#hourScale').css('font-weight', '500');
      $('#dayScale').css('background-color', '#00AAFF'); $('#dayScale').css('cursor', 'pointer'); $('#dayScale').css('font-weight', '500');

      if(timescale == 'hour') { 
        $('#hourScale').css('background-color', '#0092DB'); $('#hourScale').css('cursor', 'default'); $('#hourScale').css('font-weight', '600'); 

        var hours = new Date().getHours();
        var hoursSuffix = "AM";
        if(hours == 12) { hoursSuffix = "PM"; }
        else if(hours > 12) { hours -= 12; hoursSuffix = "PM"; }
        $("#timepicker").val(hours);
        $("#ampmpicker").val(hoursSuffix);

      } else if(timescale == 'day') { $('#dayScale').css('background-color', '#0092DB'); $('#dayScale').css('cursor', 'default'); $('#dayScale').css('font-weight', '600'); }

      // Get Data
      getData();
    }


    // Draw Graph

    var firstData = [];
    firstData.push(['Time', 'Watt Hours']);
    firstData.push(['2018-05-16 11:00:00', '3000']);
    firstData.push(['2018-05-16 12:00:00', '2000']);
    firstData.push(['2018-05-16 13:00:00', '1000']);

    if(timescale == 'day') {
      var startDate = new Date();
      startDate.setHours(0);
      startDate.setMinutes(-1);
      startDate.setSeconds(0);
      drawDayChart(firstData, startDate, 1);
    }

    function drawHourChart(data, startDate) {

      var kWh = 0;
      var endDate = new Date(startDate);
      endDate.setHours(endDate.getHours() + 1);
      endDate.setMinutes(0);
      endDate.setSeconds(0);

      // Set proper dates
      for(var i = 1; i < data.length; i++) {
        data[i][0] = new Date(data[i][0]);

        // Record the readings kWh
        for(var j = 1; j < data[i].length; j++) kWh += data[i][j];
      }

      // Display total kWh
      $('.kWh').html((kWh/data.length).toFixed(2) + ' Wh');

      // Add colors to graph
      var colors = [];
      if($('#channel1').css('background-color') != 'rgb(187, 187, 187)') colors.push('#000');
      if($('#channel2').css('background-color') != 'rgb(187, 187, 187)') colors.push('#f00');
      if($('#channel3').css('background-color') != 'rgb(187, 187, 187)') colors.push('#00C400');
      if($('#channel4').css('background-color') != 'rgb(187, 187, 187)') colors.push('#00f');
      if($('#channel5').css('background-color') != 'rgb(187, 187, 187)') colors.push('#F2A100');
      if($('#channel6').css('background-color') != 'rgb(187, 187, 187)') colors.push('#0af');
      if($('#channel7').css('background-color') != 'rgb(187, 187, 187)') colors.push('#ED00C5');
      if($('#channel8').css('background-color') != 'rgb(187, 187, 187)') colors.push('#9B00EF');

      // Set Options
      var options = {
          legend: 'none',
          colors: colors,
          chartArea: {left: 70, top: 15, 'width': '86%', 'height': '88%'},
          hAxis: { 
            format: format,
            gridlines: { count: 7, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 7, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 6000
            },
            format: '# Wh' 
          }
      };

      drawChart(data);

      function drawChart(data) {
        var data = google.visualization.arrayToDataTable(data);
        var chart = new google.visualization.AreaChart(document.getElementById('chart'));

        chart.draw(data, options);
        $('.loader').css('display', 'none');
      }
    }

    function drawDayChart(data, startDate, first) {

      var kWh = 0;
      var endDate = new Date(startDate);
      endDate.setHours(endDate.getHours() + 25);
      endDate.setMinutes(0);
      endDate.setSeconds(0);
      var currentDate = new Date();
      var hourRatio = currentDate.getMinutes() / 60;


      // Set proper dates
      for(var i = 1; i < data.length; i++) {
        data[i][0] = new Date(data[i][0]);

        // If this day and this hour then ratio the readings
        if(getFormatedDateR(startDate) == getFormatedDateR(currentDate) && i == currentDate.getHours()) {
          for(var j = 1; j < data[i].length; j++) data[i][j] = Number(data[i][j]) * hourRatio;
        } else {
          for(var j = 1; j < data[i].length; j++) data[i][j] = Number(data[i][j])
        }

        // Record the readings kWh
        for(var j = 1; j < data[i].length; j++) kWh += data[i][j];
      }

      // Display total kWh
      $('.kWh').html((kWh/1000).toFixed(2) + ' kWh');

      // Add colors to graph
      var colors = [];
      if($('#channel1').css('background-color') != 'rgb(187, 187, 187)') colors.push('#000');
      if($('#channel2').css('background-color') != 'rgb(187, 187, 187)') colors.push('#f00');
      if($('#channel3').css('background-color') != 'rgb(187, 187, 187)') colors.push('#00C400');
      if($('#channel4').css('background-color') != 'rgb(187, 187, 187)') colors.push('#00f');
      if($('#channel5').css('background-color') != 'rgb(187, 187, 187)') colors.push('#F2A100');
      if($('#channel6').css('background-color') != 'rgb(187, 187, 187)') colors.push('#0af');
      if($('#channel7').css('background-color') != 'rgb(187, 187, 187)') colors.push('#ED00C5');
      if($('#channel8').css('background-color') != 'rgb(187, 187, 187)') colors.push('#9B00EF');

      // Set Options
      var options = {
          legend: 'none',
          colors: colors,
          chartArea: {left: 70, top: 15, 'width': '86%', 'height': '88%'},
          hAxis: { 
            format: format,
            gridlines: { count: 7, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 7, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 6000
            },
            format: '# Wh' 
          }
      };

      if(first == 1) { google.charts.load('current', {'packages':['corechart']}); google.charts.setOnLoadCallback(function(){drawChart(data);}); }
      else { drawChart(data); }

      function drawChart(data) {
        console.log(data);
        var data = google.visualization.arrayToDataTable(data);
        var chart = new google.visualization.ColumnChart(document.getElementById('chart'));

        function selectHandler() {
          var selectedItem = chart.getSelection()[0];
          if (selectedItem) {
            var value = data.getValue(selectedItem.row, 0);
            value = value.getHours();
            var ampm = "AM";
            if(value > 11) ampm = "PM";
            if(value > 12) value -= 12;
            if(value == 0) value = 12;

            var url = '/device?id=' + getParameterByName('id');
            url += '&timescale=hour';
            url += '&startDate=' + $('#datepicker').val().split('-')[2] + '-' + $('#datepicker').val().split('-')[1] + '-' + $('#datepicker').val().split('-')[0];
            url += '&time=' + value;
            url += '&ampm=' + ampm;
            if(getParameterByName('channels')) url += '&channels=' + getParameterByName('channels');
            window.location.assign(url);
          }
        }
        google.visualization.events.addListener(chart, 'select', selectHandler);

        chart.draw(data, options);
        $('.loader').css('display', 'none');
      }
    }

    // Gets data based on whats selected and redraws the graph
    function getData() {
      // Start loading graph
      $('.loader').css('display', 'block');

      // Build url for new data
      var devicemac = '#{device.mac}';
      var type = '#{device.type}';

      var startdate = $('#datepicker').val().split('-')[2] + '-' + $('#datepicker').val().split('-')[1] + '-' + $('#datepicker').val().split('-')[0];

      var timescale = '';
      if($('#hourScale').css('background-color') == 'rgb(0, 146, 219)') timescale = 'hour';
      else if($('#dayScale').css('background-color') == 'rgb(0, 146, 219)') timescale = 'day';

      var channels = [];
      if($('#channel1').css('background-color') != 'rgb(187, 187, 187)') channels.push(1);
      if($('#channel2').css('background-color') != 'rgb(187, 187, 187)') channels.push(2);
      if($('#channel3').css('background-color') != 'rgb(187, 187, 187)') channels.push(3);
      if($('#channel4').css('background-color') != 'rgb(187, 187, 187)') channels.push(4);
      if($('#channel5').css('background-color') != 'rgb(187, 187, 187)') channels.push(5);
      if($('#channel6').css('background-color') != 'rgb(187, 187, 187)') channels.push(6);
      if($('#channel7').css('background-color') != 'rgb(187, 187, 187)') channels.push(7);
      if($('#channel8').css('background-color') != 'rgb(187, 187, 187)') channels.push(8);

      var url = "/device/getdata?devicemac=" + devicemac + "&type=" + type + "&timescale=" + timescale + "&startdate=" + startdate + "&channels=" + channels.toString();

      if(timescale == 'hour') { url += "&time=" + $('#timepicker').val(); url += "&ampm=" + $('#ampmpicker').val(); }

      // Get new data
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
        if(this.readyState == 4 && this.status == 200) {

          // Format data
          var data = JSON.parse(this.responseText)
          for(var i = 1; i < data.length; i++) {
            data[i][0] = new Date(data[i][0]);
            for(var j = 1; j < data[i].length; j++) {
              data[i][j] = Number(data[i][j]);
            }
          }

          // Redraw Chart
          if(timescale == 'hour') {
            var time = Number($('#timepicker').val());
            var ampm = $('#ampmpicker').val();

            if(time == 12 && ampm == 'AM') time = 0;
            if(time != 12 && ampm == 'PM') {
              time += 12;
            }
            
            var tempDate = new Date(startdate);
            tempDate.setHours(time);
            tempDate.setMinutes(0);
            tempDate.setSeconds(0);
            drawHourChart(data, tempDate);

          } else if(timescale == 'day') {
            var tempDate = new Date(startdate);
            tempDate.setHours(0);
            tempDate.setMinutes(-1);
            tempDate.setSeconds(0);
            drawDayChart(data, tempDate);
          }

        }
      };
      xhttp.open("GET", url, true);
      xhttp.send();
    }


    // RENAME DEVICE

    function renameChannelDialog(id, mac) {
      var currentName = $("#channel").val().trim();
      $(".overlay-inner-title").html('Edit Channel '+currentName.split(': ')[0]);
      $(".overlay-inner-subtitle").html('');
      var html = "";
      html += '<span style="font-weight: 600;">Rename Channel</span>';
      html += '<br>';
      html += '<span>What you want to call this channel:</span>';
      html += '<br>';
      html += '<input id="channelName" value="'+currentName.split(': ')[1]+'" class="new-device-input" onClick="this.select();" />';
      html += '<br>';
      html += '<div class="overlay-button" style="margin-right: 10px;" onclick="checkServerChannel('+id+', '+currentName.split(': ')[0]+')">Rename</div>';
      html += '<br>';
      $('.overlay-inner-container').html('');
      $('.overlay-inner-container').append(html);
      $(".overlay").fadeIn();
    }

    function checkServerChannel(id, channel){
      var newName = $("#channelName").val().trim();
      if(newName=="") { toast("Channel name can not be empty", 1200); return; }

      // Check device info on server
      console.log('TODO: Check device info on server');

      // Edit on server
      var url = "/devices/editdevicechannel?id=" + id + "&name=" + newName + "&channel=" + channel + "&labels=" + '#{device.labels}';
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {

            // Close dialog and edit device
            if(this.responseText == "Success") {
              toast('Channel name changed', 2400);
              $(".overlay").fadeOut();
              editChannelOnPage(id, newName, channel);

            } else {
              console.log(this.responseText);
            }

          }
      };
      xhttp.open("POST", url, true);
      xhttp.send();
    }

    function editChannelOnPage(id, newName, channel) {
      $('#channel'+ channel).html(channel + ': ' + newName);
      $('#channel'+ channel).val(channel + ': ' + newName);
    }

    function cancel(){
      $(".overlay").fadeOut();
    }

