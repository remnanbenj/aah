extends ../layout

block content
  link(rel="stylesheet" href="/stylesheets/device.css")

  .device-container

    .device-title

      .div(style="overflow: auto; position: relative;")
        .device-icon(style="background-image: url('/images/AMP-icon.png');")
        .device-name-container 
          .device-name #{device.name}
          .device-type Power Monitor
        .device-settings(onclick="editDeviceDialog(#{device.id}, '#{device.mac}', '#{device.type}', '#{device.labels}')")

    .device-content

      .col-md-2(style="padding: 0px; padding-top: 25px;")

        if device.labels.split(',')[0].split('-')[2] == 1
          .main-button-alt.channel-button(id="channel1" style="background: ##{device.labels.split(',')[0].split('-')[1]};" onclick="alterChannel(1)" data-color="#{device.labels.split(',')[0].split('-')[1]}") 1: #{device.labels.split(',')[0].split('-')[0]}
        else
          .main-button-alt.channel-button(id="channel1" style="background: ##{device.labels.split(',')[0].split('-')[1]}; display: none;" onclick="alterChannel(1)" data-color="#{device.labels.split(',')[0].split('-')[1]}") 1: #{device.labels.split(',')[0].split('-')[0]}

        if device.labels.split(',')[1].split('-')[2] == 1
          .main-button-alt.channel-button(id="channel2" style="background: #bbb;" onclick="alterChannel(2)" data-color="#{device.labels.split(',')[1].split('-')[1]}") 2: #{device.labels.split(',')[1].split('-')[0]}
        else
          .main-button-alt.channel-button(id="channel2" style="background: #bbb; display: none;" onclick="alterChannel(2)" data-color="#{device.labels.split(',')[1].split('-')[1]}") 2: #{device.labels.split(',')[1].split('-')[0]}

        if device.labels.split(',')[2].split('-')[2] == 1
          .main-button-alt.channel-button(id="channel3" style="background: #bbb;" onclick="alterChannel(3)" data-color="#{device.labels.split(',')[2].split('-')[1]}") 3: #{device.labels.split(',')[2].split('-')[0]}
        else
          .main-button-alt.channel-button(id="channel3" style="background: #bbb; display: none;" onclick="alterChannel(3)" data-color="#{device.labels.split(',')[2].split('-')[1]}") 3: #{device.labels.split(',')[2].split('-')[0]}

        if device.labels.split(',')[3].split('-')[2] == 1
          .main-button-alt.channel-button(id="channel4" style="background: #bbb;" onclick="alterChannel(4)" data-color="#{device.labels.split(',')[3].split('-')[1]}") 4: #{device.labels.split(',')[3].split('-')[0]}
        else
          .main-button-alt.channel-button(id="channel4" style="background: #bbb; display: none;" onclick="alterChannel(4)" data-color="#{device.labels.split(',')[3].split('-')[1]}") 4: #{device.labels.split(',')[3].split('-')[0]}

        if device.labels.split(',')[4].split('-')[2] == 1
          .main-button-alt.channel-button(id="channel5" style="background: #bbb;" onclick="alterChannel(5)" data-color="#{device.labels.split(',')[4].split('-')[1]}") 5: #{device.labels.split(',')[4].split('-')[0]}
        else
          .main-button-alt.channel-button(id="channel5" style="background: #bbb; display: none;" onclick="alterChannel(5)" data-color="#{device.labels.split(',')[4].split('-')[1]}") 5: #{device.labels.split(',')[4].split('-')[0]}
        
        if device.labels.split(',')[5].split('-')[2] == 1
          .main-button-alt.channel-button(id="channel6" style="background: #bbb;" onclick="alterChannel(6)" data-color="#{device.labels.split(',')[5].split('-')[1]}") 6: #{device.labels.split(',')[5].split('-')[0]}
        else
          .main-button-alt.channel-button(id="channel6" style="background: #bbb; display: none;" onclick="alterChannel(6)" data-color="#{device.labels.split(',')[5].split('-')[1]}") 6: #{device.labels.split(',')[5].split('-')[0]}
       
        if device.labels.split(',')[6].split('-')[2] == 1
          .main-button-alt.channel-button(id="channel7" style="background: #bbb;" onclick="alterChannel(7)" data-color="#{device.labels.split(',')[6].split('-')[1]}") 7: #{device.labels.split(',')[6].split('-')[0]}
        else
          .main-button-alt.channel-button(id="channel7" style="background: #bbb; display: none;" onclick="alterChannel(7)" data-color="#{device.labels.split(',')[6].split('-')[1]}") 7: #{device.labels.split(',')[6].split('-')[0]}

        if device.labels.split(',')[7].split('-')[2] == 1
          .main-button-alt.channel-button(id="channel8" style="background: #bbb;" onclick="alterChannel(8)" data-color="#{device.labels.split(',')[7].split('-')[1]}") 8: #{device.labels.split(',')[7].split('-')[0]}
        else
          .main-button-alt.channel-button(id="channel8" style="background: #bbb; display: none;" onclick="alterChannel(8)" data-color="#{device.labels.split(',')[7].split('-')[1]}") 8: #{device.labels.split(',')[7].split('-')[0]}
        

        .col-md-6(style="padding: 0px; margin-top: 5px;")
              .main-button-alt(style="padding-left: 0px; padding-right: 0px; text-align: center; width: 92%; font-size: 11px;" onclick="selectAll()") Select All

        .col-md-6(style="padding: 0px; margin-top: 5px;")
              .main-button-alt(style="padding-left: 0px; padding-right: 0px; text-align: center; width: 92%; font-size: 11px;" onclick="clearAll()") Clear All


      .col-md-10(style="padding: 0px; overflow: auto;")

        .graph-holder

          .graph-button-holder(style="text-align: left;")

              .main-button-alt(id="dayScale" style="margin-right: 5px; margin-left: 50px;" onclick="changeTimeScale('day')") Day

              .main-button-alt(id="halfdayScale" style="margin-right: 5px;" onclick="changeTimeScale('halfday')") 12 Hours

              .main-button-alt(id="hourScale" style="margin-right: 5px;" onclick="changeTimeScale('hour')") Hour


          .graph(id="chart")
          .loader(style="top: 230px; left: calc(50% - 15px);")

          .graph-button-holder

              .main-button-alt(style="padding-left: 8px; padding-right: 8px; padding-top: 6px;" onclick="moveLeft()")
                .glyphicon.glyphicon-triangle-left

              select.time-picker(type="text" id="timepicker" onchange="getData()" style="text-align: right; display: inline-block;")
                  option 1
                  option 2
                  option 3
                  option 4
                  option 5
                  option 6
                  option 7
                  option 8
                  option 9
                  option 10
                  option 11
                  option 12

              select.time-picker(type="text" id="ampmpicker" onchange="getData()" style="display: inline-block;")
                  option AM
                  option PM

              input.date-picker(type="text" id="datepicker" onchange="getData()")

              .main-button-alt(style="padding-left: 8px; padding-right: 8px; padding-top: 6px; margin-left: 5px;" onclick="moveRight()")
                .glyphicon.glyphicon-triangle-right
    

  script(type="text/javascript" src="https://www.gstatic.com/charts/loader.js").


  script(type="text/javascript").

    // =====HEADER=====

    var device = { id:'#{device.id}', name:'#{device.name}', mac:'#{device.mac}', type:'#{device.type}', variables:'#{device.variables}'.split(',') };

    var deviceLabels = '#{device.labels}'.split(',');

    $("#datepicker").datepicker({dateFormat: 'dd-mm-yy'});

    // Setup timescale
    $("#datepicker").val(getFormatedDate(new Date()));
    $('#hourScale').css('background-color', '#0092DB'); $('#hourScale').css('cursor', 'default'); $('#hourScale').css('font-weight', '600'); 

    var hours = new Date().getHours();
    var hoursSuffix = "AM";
    if(hours == 12) { hoursSuffix = "PM"; }
    else if(hours > 12) { hours -= 12; hoursSuffix = "PM"; }

    $("#timepicker").css('display', 'inline-block');
    $("#ampmpicker").css('display', 'inline-block');
    $("#timepicker").val(hours);
    $("#ampmpicker").val(hoursSuffix);


  script.

    // ====Util====

    function getFormatedDate(date) {
      var dateString = "";
      dateString += date.getFullYear() + "-";
      dateString += String((date.getMonth()+1)).length == 1 ? "0" + (date.getMonth()+1) + "-" : (date.getMonth()+1) + "-";
      dateString += String(date.getDate()).length == 1 ? "0" + date.getDate() + " " : date.getDate() + " ";
      dateString += String(date.getHours()).length == 1 ? "0" + date.getHours() + ":" : date.getHours() + ":";
      dateString += String(date.getMinutes()).length == 1 ? "0" + date.getMinutes() + ":" : date.getMinutes() + ":";
      dateString += String(date.getSeconds()).length == 1 ? "0" + date.getSeconds() : date.getSeconds();
      return dateString;
    }

    function getReadableDate(date) {
        var dateString = "";
        dateString += String(date.getHours()).length == 1 ? "0" + date.getHours() + ":" : date.getHours() + ":";
        dateString += String(date.getMinutes()).length == 1 ? "0" + date.getMinutes() + " " : date.getMinutes();
        return dateString;
    }


  script(type="text/javascript").

    // =====NAVIGATION=====

    // Select or deselect an active channel
    function alterChannel(channel) {
      // Change button color (select / deselect)
      if($('#channel' + channel).css('background-color') == 'rgb(187, 187, 187)') {
        if(channel == 1) $('#channel' + channel).css('background-color', '#' + $('#channel' + channel).data('color'));
        if(channel == 2) $('#channel' + channel).css('background-color', '#' + $('#channel' + channel).data('color'));
        if(channel == 3) $('#channel' + channel).css('background-color', '#' + $('#channel' + channel).data('color'));
        if(channel == 4) $('#channel' + channel).css('background-color', '#' + $('#channel' + channel).data('color'));
        if(channel == 5) $('#channel' + channel).css('background-color', '#' + $('#channel' + channel).data('color'));
        if(channel == 6) $('#channel' + channel).css('background-color', '#' + $('#channel' + channel).data('color'));
        if(channel == 7) $('#channel' + channel).css('background-color', '#' + $('#channel' + channel).data('color'));
        if(channel == 8) $('#channel' + channel).css('background-color', '#' + $('#channel' + channel).data('color'));
      } else $('#channel' + channel).css('background-color', 'rgb(187, 187, 187)');

      getData();
    }

    // Select all active channels
    function selectAll(){
      for(var  i = 0; i < deviceLabels.length; i++) {
        if(deviceLabels[i].split('-')[2] == 1) {
          $('#channel' + (i+1)).css('background-color', '#' + deviceLabels[i].split('-')[1]);
        }
      }
      getData();
    }

    // Deselect all channels
    function clearAll(){
      $('#channel1').css('background-color', 'rgb(187, 187, 187)');
      $('#channel2').css('background-color', 'rgb(187, 187, 187)');
      $('#channel3').css('background-color', 'rgb(187, 187, 187)');
      $('#channel4').css('background-color', 'rgb(187, 187, 187)');
      $('#channel5').css('background-color', 'rgb(187, 187, 187)');
      $('#channel6').css('background-color', 'rgb(187, 187, 187)');
      $('#channel7').css('background-color', 'rgb(187, 187, 187)');
      $('#channel8').css('background-color', 'rgb(187, 187, 187)');

      getData();
    }

    // Changes the timescale
    function changeTimeScale(timescale) {
      // Change timescale
      $('#hourScale').css('background-color', '#00AAFF'); $('#hourScale').css('cursor', 'pointer'); $('#hourScale').css('font-weight', '500');
      $('#halfdayScale').css('background-color', '#00AAFF'); $('#hourScale').css('cursor', 'pointer'); $('#hourScale').css('font-weight', '500');
      $('#dayScale').css('background-color', '#00AAFF'); $('#dayScale').css('cursor', 'pointer'); $('#dayScale').css('font-weight', '500');

      if(timescale == 'hour') { 
        $('#hourScale').css('background-color', '#0092DB'); $('#hourScale').css('cursor', 'default'); $('#hourScale').css('font-weight', '600'); 

        var hours = new Date().getHours();
        var hoursSuffix = "AM";
        if(hours == 12) { hoursSuffix = "PM"; }
        else if(hours > 12) { hours -= 12; hoursSuffix = "PM"; }
        $("#timepicker").css('display', 'inline-block');
        $("#ampmpicker").css('display', 'inline-block');
        $("#timepicker").val(hours);
        $("#ampmpicker").val(hoursSuffix);

      } else if(timescale == 'halfday') { 
        $('#halfdayScale').css('background-color', '#0092DB'); $('#dayScale').css('cursor', 'default'); $('#dayScale').css('font-weight', '600'); 

        var hours = new Date().getHours();
        var hoursSuffix = "AM";
        if(hours == 12) { hoursSuffix = "PM"; }
        else if(hours > 12) { hours -= 12; hoursSuffix = "PM"; }
        $("#timepicker").css('display', 'inline-block');
        $("#ampmpicker").css('display', 'inline-block');
        $("#timepicker").val(hours);
        $("#ampmpicker").val(hoursSuffix);

      } else if(timescale == 'day') { 
        $('#dayScale').css('background-color', '#0092DB'); $('#dayScale').css('cursor', 'default'); $('#dayScale').css('font-weight', '600'); 

        $("#timepicker").css('display', 'none');
        $("#ampmpicker").css('display', 'none');
      }

      getData();
    }

    // Move left according to timescale
    function moveLeft() {
        var date = new Date($('#datepicker').val().split('-')[2] + '-' + $('#datepicker').val().split('-')[1] + '-' + $('#datepicker').val().split('-')[0]);

        var timescale = '';
        if($('#hourScale').css('background-color') == 'rgb(0, 146, 219)') timescale = 'hour';
        else if($('#halfdayScale').css('background-color') == 'rgb(0, 146, 219)') timescale = 'halfday';
        else if($('#dayScale').css('background-color') == 'rgb(0, 146, 219)') timescale = 'day';

        if(timescale == 'hour') {

          if($('#timepicker').val() == 1) {
            $('#timepicker').val(12);

          } else if($('#timepicker').val() == 12) {
            $('#timepicker').val(11);
            if($('#ampmpicker').val() == "PM"){
              $('#ampmpicker').val('AM');
            } else {
              date.setDate(date.getDate() - 1);
              $('#datepicker').val(date.getDate() + '-' + (date.getMonth()+1) + '-' + date.getFullYear());
              $('#ampmpicker').val('PM');
            }

          } else {
            $('#timepicker').val(Number($('#timepicker').val()) - 1);
          }

        } else if(timescale == 'halfday') {

          if($('#timepicker').val() == 1) {
            $('#timepicker').val(12);

          } else if($('#timepicker').val() == 12) {
            $('#timepicker').val(11);
            if($('#ampmpicker').val() == "PM"){
              $('#ampmpicker').val('AM');
            } else {
              date.setDate(date.getDate() - 1);
              $('#datepicker').val(date.getDate() + '-' + (date.getMonth()+1) + '-' + date.getFullYear());
              $('#ampmpicker').val('PM');
            }

          } else {
            $('#timepicker').val(Number($('#timepicker').val()) - 1);
          }

        } else {
          date.setDate(date.getDate() - 1);
          var dateString = "";
          dateString += String(date.getDate()).length == 1 ? "0" + date.getDate() + "-" : date.getDate() + "-";
          dateString += String((date.getMonth()+1)).length == 1 ? "0" + (date.getMonth()+1) + "-" : (date.getMonth()+1) + "-";
          dateString += date.getFullYear();
          $('#datepicker').val(dateString);
        }

        getData();
    }

    // Move right according to timescale
    function moveRight() {
        var date = new Date($('#datepicker').val().split('-')[2] + '-' + $('#datepicker').val().split('-')[1] + '-' + $('#datepicker').val().split('-')[0]);

        var timescale = '';
        if($('#hourScale').css('background-color') == 'rgb(0, 146, 219)') timescale = 'hour';
        else if($('#halfdayScale').css('background-color') == 'rgb(0, 146, 219)') timescale = 'halfday';
        else if($('#dayScale').css('background-color') == 'rgb(0, 146, 219)') timescale = 'day';

        if(timescale == 'hour') {

          if($('#timepicker').val() == 12) {
            $('#timepicker').val(1);

          } else if($('#timepicker').val() == 11) {
            $('#timepicker').val(12);
            if($('#ampmpicker').val() == "PM"){
              date.setDate(date.getDate() + 1);
              $('#datepicker').val(date.getDate() + '-' + (date.getMonth()+1) + '-' + date.getFullYear());
              $('#ampmpicker').val('AM');
            } else {
              $('#ampmpicker').val('PM');
            }

          } else {
            $('#timepicker').val(Number($('#timepicker').val()) + 1);
          }

        } else if(timescale == 'halfday') {

          if($('#timepicker').val() == 12) {
            $('#timepicker').val(1);

          } else if($('#timepicker').val() == 11) {
            $('#timepicker').val(12);
            if($('#ampmpicker').val() == "PM"){
              date.setDate(date.getDate() + 1);
              $('#datepicker').val(date.getDate() + '-' + (date.getMonth()+1) + '-' + date.getFullYear());
              $('#ampmpicker').val('AM');
            } else {
              $('#ampmpicker').val('PM');
            }

          } else {
            $('#timepicker').val(Number($('#timepicker').val()) + 1);
          }

        } else {
          date.setDate(date.getDate() + 1);
          var dateString = "";
          dateString += String(date.getDate()).length == 1 ? "0" + date.getDate() + "-" : date.getDate() + "-";
          dateString += String((date.getMonth()+1)).length == 1 ? "0" + (date.getMonth()+1) + "-" : (date.getMonth()+1) + "-";
          dateString += date.getFullYear();
          $('#datepicker').val(dateString);
        }

        getData();
    }


  script(type="text/javascript").


    // =====GRAPH=====

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(googleLoaded);
    var chart;

    function googleLoaded(){
      chart = new google.visualization.AreaChart(document.getElementById('chart'));
      getData();
    }

    // Gets data based on whats selected and redraws the graph
    function getData() {
      // Loader
      $('.loader').css('display', 'block');

      // Device and data info
      var deviceMac = device.mac;
      var deviceType = device.type;
      var timeScale = '';
      if($('#hourScale').css('background-color') == 'rgb(0, 146, 219)') timeScale = 'hour';
      else if($('#halfdayScale').css('background-color') == 'rgb(0, 146, 219)') timescale = 'halfday';
      else if($('#dayScale').css('background-color') == 'rgb(0, 146, 219)') timeScale = 'day';

      // Get dates
      var startDate = new Date();
      startDate.setFullYear($('#datepicker').val().split('-')[2]);
      startDate.setMonth($('#datepicker').val().split('-')[1]-1);
      startDate.setDate($('#datepicker').val().split('-')[0]);
      startDate.setHours($('#timepicker').val());
      if($('#ampmpicker').val() == 'PM' && $('#timepicker').val() != 12) startDate.setHours(startDate.getHours() + 12);
      if(timeScale == 'day') startDate.setHours(0);
      startDate.setMinutes(0);
      startDate.setSeconds(0);
      var endDate = new Date(startDate);
      if(timeScale == 'hour') endDate.setMinutes(endDate.getMinutes() + 60);
      if(timeScale == 'day') endDate.setHours(24);
      var timeOffset = startDate.getTimezoneOffset();

      // Set dates to GMT
      var GMTStartDate = new Date(startDate);
      var GMTEndDate = new Date(endDate);
      GMTStartDate.setMinutes(timeOffset);
      GMTEndDate.setMinutes(timeOffset);

      // Channels
      var channels = [];
      if($('#channel1').css('background-color') != 'rgb(187, 187, 187)') channels.push(1);
      if($('#channel2').css('background-color') != 'rgb(187, 187, 187)') channels.push(2);
      if($('#channel3').css('background-color') != 'rgb(187, 187, 187)') channels.push(3);
      if($('#channel4').css('background-color') != 'rgb(187, 187, 187)') channels.push(4);
      if($('#channel5').css('background-color') != 'rgb(187, 187, 187)') channels.push(5);
      if($('#channel6').css('background-color') != 'rgb(187, 187, 187)') channels.push(6);
      if($('#channel7').css('background-color') != 'rgb(187, 187, 187)') channels.push(7);
      if($('#channel8').css('background-color') != 'rgb(187, 187, 187)') channels.push(8);
      console.log(channels);

      var url = "/device/getdata?devicemac=" + deviceMac + "&devicetype=" + deviceType + "&timescale=" + timeScale + "&timeoffset=" + timeOffset + "&startdate=" + getFormatedDate(GMTStartDate) + "&enddate=" + getFormatedDate(GMTEndDate) + "&channels=" + channels.toString();


      // Get new data
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
        if(this.readyState == 4 && this.status == 200) {

          // Format data
          var data = JSON.parse(this.responseText)
          for(var i = 1; i < data.length; i++) {
            data[i][0] = new Date(data[i][0]);
            for(var j = 1; j < data[i].length; j++) {
              data[i][j] = Number(data[i][j]);
            }
          }
          console.log(data);

          // Redraw Chart
          if(timeScale == 'hour') {
            var time = Number($('#timepicker').val());
            var ampm = $('#ampmpicker').val();

            if(time == 12 && ampm == 'AM') time = 0;
            if(time != 12 && ampm == 'PM') {
              time += 12;
            }
            
            var tempDate = new Date(startDate);
            tempDate.setHours(time);
            tempDate.setMinutes(0);
            tempDate.setSeconds(0);
            chart = new google.visualization.AreaChart(document.getElementById('chart'));
            drawHourChart(data, tempDate);

          } else if(timeScale == 'halfday') {
            var time = Number($('#timepicker').val());
            var ampm = $('#ampmpicker').val();

            if(time == 12 && ampm == 'AM') time = 0;
            if(time != 12 && ampm == 'PM') {
              time += 12;
            }
            
            var tempDate = new Date(startDate);
            tempDate.setHours(time);
            tempDate.setMinutes(0);
            tempDate.setSeconds(0);
            chart = new google.visualization.AreaChart(document.getElementById('chart'));
            drawHalfdayChart(data, tempDate);

          } else if(timeScale == 'day') {
            var tempDate = new Date(startDate);
            tempDate.setHours(0);
            tempDate.setMinutes(0);
            tempDate.setSeconds(0);
            chart = new google.visualization.ColumnChart(document.getElementById('chart'));
            drawDayChart(data, tempDate);
          }

        }
      };
      xhttp.open("GET", url, true);
      xhttp.send();
    }

    function drawHourChart(data, startDate) {

      //var kWh = 0;
      var endDate = new Date(startDate);
      endDate.setHours(endDate.getHours() + 1);
      endDate.setMinutes(0);
      endDate.setSeconds(0);

      // Set proper dates
      for(var i = 1; i < data.length; i++) {
        var tempDate = new Date(data[i][0]);
        tempDate.setMinutes(tempDate.getMinutes() - tempDate.getTimezoneOffset());
        data[i][0] = tempDate;

        for(var j = 1; j < data[i].length; j++) data[i][j] = Number(data[i][j]);
      }

      // Get readings left & Display total kWh
      /*var minutesLeft = 60 - new Date().getMinutes();
      var secondsLeft = (60 - new Date().getSeconds()) + minutesLeft * 60;
      var readingsLeft = Math.round(secondsLeft / 5);
      $('.kWh').html('Total: ' + (kWh/(data.length + readingsLeft)).toFixed(2) + ' kWh');*/

      // Add colors to graph
      var colors = [];
      if($('#channel1').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel1').data('color'));
      if($('#channel2').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel2').data('color'));
      if($('#channel3').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel3').data('color'));
      if($('#channel4').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel4').data('color'));
      if($('#channel5').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel5').data('color'));
      if($('#channel6').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel6').data('color'));
      if($('#channel7').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel7').data('color'));
      if($('#channel8').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel8').data('color'));

      if(colors.length < 1) colors.push('#000');

      // Set Options
      var options = {
          legend: 'none',
          colors: colors,
          chartArea: {left: 60, top: 10, 'width': '90%', 'height': '88%'},
          explorer: {
            axis: 'horizontal',
            keepInBounds: true,
            maxZoomOut: 1.0
          },
          hAxis: { 
            gridlines: { count: 7, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 11, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 10
            },
            format: '# kW' 
          }
      };

      drawChart(data);

      function drawChart(data) {
        var data = google.visualization.arrayToDataTable(data);

        chart.draw(data, options);
        $('.loader').css('display', 'none');
      }
    }

    function drawHalfdayChart(data, startDate) {

      var endDate = new Date(startDate);
      endDate.setMinutes(60);
      endDate.setSeconds(0);
      startDate.setHours(startDate.getHours() - 12);

      // Set proper dates
      for(var i = 1; i < data.length; i++) {
        var tempDate = new Date(data[i][0]);
        tempDate.setMinutes(tempDate.getMinutes() - tempDate.getTimezoneOffset());
        data[i][0] = tempDate;

        for(var j = 1; j < data[i].length; j++) data[i][j] = Number(data[i][j]);
      }

      // Add colors to graph
      var colors = [];
      if($('#channel1').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel1').data('color'));
      if($('#channel2').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel2').data('color'));
      if($('#channel3').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel3').data('color'));
      if($('#channel4').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel4').data('color'));
      if($('#channel5').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel5').data('color'));
      if($('#channel6').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel6').data('color'));
      if($('#channel7').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel7').data('color'));
      if($('#channel8').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel8').data('color'));

      if(colors.length < 1) colors.push('#000');

      // Set Options
      var options = {
          legend: 'none',
          colors: colors,
          chartArea: {left: 60, top: 10, 'width': '90%', 'height': '88%'},
          explorer: {
            axis: 'horizontal',
            keepInBounds: true,
            maxZoomOut: 1.0
          },
          hAxis: { 
            gridlines: { count: 7, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 11, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 10
            },
            format: '# kW' 
          }
      };

      drawChart(data);

      function drawChart(data) {
        var data = google.visualization.arrayToDataTable(data);

        chart.draw(data, options);
        $('.loader').css('display', 'none');
      }
    }

    function drawDayChart(data, startDate, first) {

      var endDate = new Date(startDate);
      endDate.setHours(endDate.getHours() + 24);
      endDate.setMinutes(0);
      endDate.setSeconds(0);

      var currentDate = new Date();
      var hourRatio = ((currentDate.getMinutes()*60) + currentDate.getSeconds()) / 3600;

      // Set proper dates
      for(var i = 1; i < data.length; i++) {
        var tempDate = new Date(data[i][0]);
        tempDate.setMinutes(tempDate.getMinutes() - tempDate.getTimezoneOffset());
        data[i][0] = tempDate;

        // If this day and this hour then ratio the readings
        if(getFormatedDateR(startDate) == getFormatedDateR(currentDate) && i == currentDate.getHours() + 1) {
          for(var j = 1; j < data[i].length; j++) data[i][j] = Number(data[i][j]) * hourRatio / 1000;
        } else {
          for(var j = 1; j < data[i].length; j++) data[i][j] = Number(data[i][j]) / 1000;
        }
      }

      // Add colors to graph
      var colors = [];
      if($('#channel1').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel1').data('color'));
      if($('#channel2').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel2').data('color'));
      if($('#channel3').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel3').data('color'));
      if($('#channel4').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel4').data('color'));
      if($('#channel5').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel5').data('color'));
      if($('#channel6').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel6').data('color'));
      if($('#channel7').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel7').data('color'));
      if($('#channel8').css('background-color') != 'rgb(187, 187, 187)') colors.push('#' + $('#channel8').data('color'));

      if(colors.length < 1) colors.push('#000');

      // Set Options
      var options = {
          legend: 'none',
          bar: {groupWidth: "80%"},
          colors: colors,
          chartArea: {left: 60, top: 10, 'width': '90%', 'height': '88%'},
          explorer: {
            axis: 'horizontal',
            keepInBounds: true,
            maxZoomOut: 1.0
          },
          hAxis: { 
            gridlines: { count: 7, color:"#ccc" },
            viewWindow: {
                    min: startDate,
                    max: endDate
            }
          },
          vAxis: { 
            gridlines: { count: 11, color:"#ccc" },
            viewWindow: {
                    min: 0,
                    max: 10
            },
            format: '# kWh' 
          }
      };

      drawChart(data);

      function drawChart(data) {
        var data = google.visualization.arrayToDataTable(data);

        function selectHandler() {
          var selectedItem = chart.getSelection()[0];
          if (selectedItem) {
            $('#dayScale').css('background-color', '#00AAFF'); $('#dayScale').css('cursor', 'pointer'); $('#dayScale').css('font-weight', '500');
            $('#hourScale').css('background-color', '#0092DB'); $('#hourScale').css('cursor', 'default'); $('#hourScale').css('font-weight', '600'); 

            var hours = data.getValue(selectedItem.row, 0).getHours();
            var hoursSuffix = "AM";
            if(hours == 12) { hoursSuffix = "PM"; }
            else if(hours > 12) { hours -= 12; hoursSuffix = "PM"; }
            $("#timepicker").css('display', 'inline-block');
            $("#ampmpicker").css('display', 'inline-block');
            $("#timepicker").val(hours);
            $("#ampmpicker").val(hoursSuffix);

            getData();
          }
        }
        google.visualization.events.addListener(chart, 'select', selectHandler);

        chart.draw(data, options);
        $('.loader').css('display', 'none');
      }
    }


    // RENAME DEVICE

    function renameChannelDialog(id, mac) {
      var currentName = $("#channel").val().trim();
      $(".overlay-inner-title").html('Edit Channel '+currentName.split(': ')[0]);
      $(".overlay-inner-subtitle").html('');
      var html = "";
      html += '<span style="font-weight: 600;">Rename Channel</span>';
      html += '<br>';
      html += '<span>What you want to call this channel:</span>';
      html += '<br>';
      html += '<input id="channelName" value="'+currentName.split(': ')[1]+'" class="new-device-input" onClick="this.select();" />';
      html += '<br>';
      html += '<div class="overlay-button" style="margin-right: 10px;" onclick="checkServerChannel('+id+', '+currentName.split(': ')[0]+')">Rename</div>';
      html += '<br>';
      $('.overlay-inner-container').html('');
      $('.overlay-inner-container').append(html);
      $(".overlay").fadeIn();
    }

    function checkServerChannel(id, channel){
      var newName = $("#channelName").val().trim();
      if(newName=="") { toast("Channel name can not be empty", 1200); return; }

      // Check device info on server
      console.log('TODO: Check device info on server');

      // Edit on server
      var url = "/devices/editdevicechannel?id=" + id + "&name=" + newName + "&channel=" + channel;
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {

            // Close dialog and edit device
            if(this.responseText == "Success") {
              toast('Channel name changed', 2400);
              $(".overlay").fadeOut();
              editChannelOnPage(id, newName, channel);
              

            } else {
              console.log(this.responseText);
            }

          }
      };
      xhttp.open("POST", url, true);
      xhttp.send();
    }

    function editChannelOnPage(id, newName, channel) {
      $('#channel'+ channel).html(channel + ': ' + newName);
      $('#channel'+ channel).val(channel + ': ' + newName);
    }

    function cancel(){
      $(".overlay").fadeOut();
    }

  script(type="text/javascript").

    // EDIT DEVICE

    function editDeviceDialog(id, mac, type, channels){
      var deviceName = '#{device.name}';

      $(".overlay-inner-title").html('Edit Device');
      $(".overlay-inner-subtitle").html('');

      var html = "";
      html += '<span style="font-weight: 600;">Rename Device</span>';
      html += '<br>';
      html += '<span>What you want to call this device:</span>';
      html += '<br>';
      html += '<input id="deviceName" value="'+deviceName+'" class="new-device-input"/>';
      html += '<br>';
      html += '<div class="overlay-button" style="margin-right: 10px;" onclick="checkServerEdit('+id+')">Rename</div>';
      html += '<br>';

      if(type == 'AMP') {
        html += '<hr style="width: 80%;">';
        html += '<span style="font-weight: 600;">Edit Channels</span>';
        html += '<br>';
        html += '<span>Rename and change the color of this devices channels</span>';
        html += '<br>';

        html += '<div style="text-align: center; padding: 10px;">';
        for(var i = 0 ; i < deviceLabels.length; i++) {
          var channel = deviceLabels[i];
          html += '<div id="channelActive'+(i+1)+'" onclick="activateChannel('+id+', '+(i+1)+')" style="padding-left: 0px; padding-right: 0px; width: 70px; background: '+( channel.split('-')[2] == 1 ? '#00aaff' : '#bbb' )+'; text-align: center; margin-bottom: 5px;" class="main-button-alt">'+( channel.split('-')[2] == 1 ? 'Active' : 'Disabled' )+'</div>';
          html += '<div id="channelEdit'+(i+1)+'" onclick="renameChannelDialog('+id+', \''+channel.split('-')[0]+'\', '+(i+1)+')" style="text-align: left; width: 50%; margin-bottom: 5px; margin-left: 5px;" class="main-button-alt">'+(i+1)+': '+channel.split('-')[0]+'</div>';
          
          html += '<div class="dropdown" style="margin-left: 5px;">';
          html += '<div id="channelColor'+(i+1)+'" data-color="'+channel.split('-')[1]+'" class="dropbtn" style="background: #'+channel.split('-')[1]+';">&nbsp;</div>';
          html += '<div class="dropdown-content">';
          html += '<div onclick="recolorChannel('+id+', \'000000\', '+(i+1)+')" class="color-option" style="background: #000000;"></div>';
          html += '<div onclick="recolorChannel('+id+', \'FF0000\', '+(i+1)+')" class="color-option" style="background: #FF0000;"></div>';
          html += '<div onclick="recolorChannel('+id+', \'F2A100\', '+(i+1)+')" class="color-option" style="background: #F2A100;"></div>';
          html += '<div onclick="recolorChannel('+id+', \'00C400\', '+(i+1)+')" class="color-option" style="background: #00C400;"></div>';
          html += '<div onclick="recolorChannel('+id+', \'00AAFF\', '+(i+1)+')" class="color-option" style="background: #00AAFF;"></div>';
          html += '<div onclick="recolorChannel('+id+', \'5162FF\', '+(i+1)+')" class="color-option" style="background: #5162FF;"></div>';
          html += '<div onclick="recolorChannel('+id+', \'9B00EF\', '+(i+1)+')" class="color-option" style="background: #9B00EF;"></div>';
          html += '<div onclick="recolorChannel('+id+', \'ED00C5\', '+(i+1)+')" class="color-option" style="background: #ED00C5;"></div>';
          html += '</div>';
          html += '</div>';
          html += '<br>';
        }
        html += '</div>';
      }

      $('.overlay-inner-container').html('');
      $('.overlay-inner-container').append(html);

      $(".overlay").fadeIn();

      // Set values for color selects
      for(var i = 0 ; i < deviceLabels.length; i++) {
        $('#channelColor'+(i+1)).val($('#channelColor'+(i+1)).data('color'));
      }
    }
    var tempHTML = "";

    function activateChannel(deviceID, channel) {
      if($('#channelActive'+channel).css('backgroundColor') == 'rgb(187, 187, 187)'){
        $('#channelActive'+channel).css('background',  '#0af');
        $('#channelActive'+channel).html('Active');
      } else {
        $('#channelActive'+channel).css('background',  '#bbb');
        $('#channelActive'+channel).html('Disabled');
      }
      // Edit on server
      var url = "/devices/activechannel?id=" + deviceID + "&channel=" + channel;
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {

            // Close dialog and edit device
            if(this.responseText == "Activated") {
              toast('Channel activated', 2400);
              $('#channel'+channel).css('display', 'inline-block');
              deviceLabels[channel-1] = deviceLabels[channel-1].split('-')[0] + '-' + deviceLabels[channel-1].split('-')[1] + '-' + 1;

            } else if(this.responseText == "Disabled") {
              toast('Channel disabled', 2400);
              $('#channelActive'+channel).css('background',  '#bbb');
              $('#channelActive'+channel).html('Disabled');
              $('#channel'+channel).css('background', 'rgb(187, 187, 187)');
              $('#channel'+channel).css('display', 'none');
              deviceLabels[channel-1] = deviceLabels[channel-1].split('-')[0] + '-' + deviceLabels[channel-1].split('-')[1] + '-' + 0;
              getData();

            } else {
              console.log(this.responseText);
            }

          }
      };
      xhttp.open("POST", url, true);
      xhttp.send();
    }

    function recolorChannel(deviceID, color, channel) {
      $('#channelColor'+channel).css('backgroundColor', '#' + color);
      $('.dropdown').removeClass('hover');

      // Edit on server
      var url = "/devices/recolorchannel?id=" + deviceID + "&color=" + color + "&channel=" + channel;
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {

            // Close dialog and edit device
            if(this.responseText == "Success") {
              toast('Channel color changed', 2400);
              if($('#channel'+channel).css('backgroundColor') != 'rgb(187, 187, 187)') {
                $('#channel'+channel).css('background', '#' + color);
                getData();
              }
              $('#channel'+channel).data('color', color);
              deviceLabels[channel-1] = deviceLabels[channel-1].split('-')[0] + '-' + color + '-' + deviceLabels[channel-1].split('-')[2];

            } else {
              console.log(this.responseText);
            }

          }
      };
      xhttp.open("POST", url, true);
      xhttp.send();
    }

    function renameChannelDialog(deviceID, channelName, channel) {
      tempHTML = $('.overlay-inner-container').html();

      var html = "";
      html += '<span style="font-weight: 600;">Rename Channel</span>';
      html += '<br>';
      html += '<span>What you want to call this channel:</span>';
      html += '<br>';
      html += '<input id="channelName" value="'+channelName+'" class="new-device-input" />';
      html += '<br>';
      html += '<div class="overlay-button" style="margin-right: 10px;" onclick="renameChannel('+deviceID+', '+channel+')">Rename</div>';
      html += '<div class="overlay-button" onclick="cancelChannel()">Cancel</div>';
      html += '<br>';
      
      $('.overlay-inner-container').html('');
      $('.overlay-inner-container').append(html);
      $("#channelName").select();
    }

    function renameChannel(deviceID, channel) {
      var newName = $('#channelName').val();

      // Edit on server
      var url = "/devices/renamechannel?id=" + deviceID + "&name=" + newName + "&channel=" + channel;
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {

            // Close dialog and edit device
            if(this.responseText == "Success") {
              toast('Channel name changed', 2400);
              cancelChannel();
              $('#channelEdit'+channel).html(channel + ': ' + newName);
              $('#channel'+channel).html(channel + ': ' + newName);
              deviceLabels[channel-1] = newName + '-' + deviceLabels[channel-1].split('-')[1] + '-' + deviceLabels[channel-1].split('-')[2];

            } else {
              console.log(this.responseText);
            }

          }
      };
      xhttp.open("POST", url, true);
      xhttp.send();
    }

    function cancelChannel(){
      $('.overlay-inner-container').html('');
      $('.overlay-inner-container').append(tempHTML);
    }

    function checkServerEdit(id){
      var deviceName = $("#deviceName").val();
      if(deviceName=="") { toast("Please enter a device name", 1200); return; }

      // Check device info on server
      console.log('TODO: Check device info on server');

      // Edit on server
      var url = "/devices/editdevice?id=" + id + "&name=" + deviceName;
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {

            // Close dialog and edit device
            if(this.responseText == "Success") {
              toast('Device name changed', 2400);
              $(".overlay").fadeOut();
              editDeviceOnPage(id, deviceName);

            } else {
              console.log(this.responseText);
            }

          }
      };
      xhttp.open("POST", url, true);
      xhttp.send();
    }

    function editDeviceOnPage(id, deviceName) {
      $('.device-name').html(deviceName);
    }



